name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.4
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry and virtualenv
        uses: actions/cache@v3
        with:
          path: |
            .venv
            ~/.cache/pypoetry
          key: v2-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (main + dev)
        run: poetry install --no-interaction --no-ansi --with dev

      # Run the exact same hooks as developers (covers ruff/black; mypy runs at pre-push stage)
      - name: Run pre-commit on all files
        uses: pre-commit/action@v3.0.1

      - name: Run tests
        run: poetry run pytest -v export/tests/

      - name: dbt deps
        working-directory: transform
        run: poetry run dbt deps

      - name: dbt build (dry run)
        working-directory: transform
        env:
          DUCKDB_PATH: /tmp/test.duckdb
        run: poetry run dbt build --dry-run

      - name: dbt debug
        env:
          DUCKDB_PATH: /tmp/test.duckdb
        run: poetry run dbt debug --project-dir transform
